diff --git a/node_modules/node-mpv/lib/ipcInterface/ipcInterface.js b/node_modules/node-mpv/lib/ipcInterface/ipcInterface.js
index a0c5756..fbbdc01 100644
--- a/node_modules/node-mpv/lib/ipcInterface/ipcInterface.js
+++ b/node_modules/node-mpv/lib/ipcInterface/ipcInterface.js
@@ -188,7 +188,6 @@ ipcInterface.prototype = Object.assign({
 	//
 	send: function(command) {
 		return new Promise((resolve, reject) => {
-
 			// reject the promise if the socket is not running, this is only the case if the mpv player is not running
 			if (this.socket.destroyed){
 				return reject(this.errorHandler.errorMessage(8, util.getCaller()));
@@ -205,6 +204,13 @@ ipcInterface.prototype = Object.assign({
 			// create an ipcRequest object to store the required information for error messages
 			// put the resolve function in the ipcRequests dictionary to call it later
 			this.ipcRequests[request_id] = new ipcRequest(resolve, reject, Object.values(command).splice(1));
+
+			// BEGIN: patch
+			// Listen for the "error" event
+			const handleError = (err) => {this.socket.removeListener('error', handleError); return reject('A socket error occured', err.message)}
+			this.socket.on('error', handleError);
+			// END: patch
+
 			try{
 				this.socket.write(JSON.stringify(messageJson) + '\n');
 			}
